stages:
  - build
  - test
  - post-build
  - deploy

variables:
  MICRO_PATH: "micro_agify"
  DOCKER_IMAGE_NAME: "f64franco/micro-agify"

image: docker:cli
services:
  - docker:dind

build_develop_agify:
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd "$MICRO_PATH"
    - docker build --pull -t "$CI_REGISTRY_IMAGE/$MICRO_PATH:$DEVELOP_BRANCH_NAME" --file server.Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE/$MICRO_PATH:$DEVELOP_BRANCH_NAME"

test_develop_agify:
  stage: test
  needs: [build_develop_agify]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd "$MICRO_PATH"
    #- docker compose up --abort-on-container-exit
    - docker compose up --exit-code-from testing
    - docker compose down --rmi all -v --remove-orphans

post_build_agify:
  stage: post-build
  needs: [test_develop_agify]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE/$MICRO_PATH:$DEVELOP_BRANCH_NAME"
    - docker tag "$CI_REGISTRY_IMAGE/$MICRO_PATH:$DEVELOP_BRANCH_NAME" "$DOCKER_IMAGE_NAME:$DEVELOP_BRANCH_NAME"
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    - docker push "$DOCKER_IMAGE_NAME:$DEVELOP_BRANCH_NAME"
    - docker rmi "$CI_REGISTRY_IMAGE/$MICRO_PATH:$DEVELOP_BRANCH_NAME" "$DOCKER_IMAGE_NAME:$DEVELOP_BRANCH_NAME"

deploy_develop_agify:
  stage: deploy
  needs: [post_build_agify]
  script:
    - echo "Deploy to Kubernetes"
